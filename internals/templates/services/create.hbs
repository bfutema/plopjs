import { injectable, inject } from 'tsyringe';

import { {{getEntityNameSingularized entity_reference}} } from '../app/typeorm/entities/{{getEntityNameSingularized entity_reference}}';
import { ICreate{{getEntityNameSingularized entity_reference}} } from '../contracts/I{{getEntityNameSingularized entity_reference}}DTO';
import { I{{getEntityNamePluralized entity_reference}}Repository } from '../repositories/I{{getEntityNamePluralized entity_reference}}Repository';

@injectable()
class Create{{getEntityNameSingularized entity_reference}}Service {
  constructor(
    @inject('{{getEntityNamePluralized entity_reference}}Repository')
    private {{fromServicesGetEntityNamePluralizedVariable entity_reference}}Repository: I{{getEntityNamePluralized entity_reference}}Repository,
  ) {}

  public async execute(data: ICreate{{getEntityNameSingularized entity_reference}}): Promise<{{getEntityNameSingularized entity_reference}}> {
    const { id } = await this.{{fromServicesGetEntityNamePluralizedVariable entity_reference}}Repository.create(data);

    const created{{getEntityNameSingularized entity_reference}} = await this.{{fromServicesGetEntityNamePluralizedVariable entity_reference}}Repository.findById({ id });

    return created{{getEntityNameSingularized entity_reference}};
  }
}

export { Create{{getEntityNameSingularized entity_reference}}Service };
