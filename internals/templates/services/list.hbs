import { injectable, inject } from 'tsyringe';

import { {{getEntityNameSingularized entity_reference}} } from '../app/typeorm/entities/{{getEntityNameSingularized entity_reference}}';
import { IList{{getEntityNameSingularized entity_reference}} } from '../contracts/IUserDTO';
import { I{{getEntityNamePluralized entity_reference}}Repository } from '../repositories/I{{getEntityNamePluralized entity_reference}}Repository';

@injectable()
class List{{getEntityNamePluralized entity_reference}}Service {
  constructor(
    @inject('{{getEntityNamePluralized entity_reference}}Repository')
    private {{fromServicesGetEntityNamePluralizedVariable entity_reference}}Repository: I{{getEntityNamePluralized entity_reference}}Repository,
  ) {}

  public async execute(params: IList{{getEntityNameSingularized entity_reference}}): Promise<[{{getEntityNameSingularized entity_reference}}[], number]> {
    const {{fromServicesGetEntityNamePluralizedVariable entity_reference}} = await this.{{fromServicesGetEntityNamePluralizedVariable entity_reference}}Repository.find(params);

    return {{fromServicesGetEntityNamePluralizedVariable entity_reference}};
  }
}

export { List{{getEntityNamePluralized entity_reference}}Service };
